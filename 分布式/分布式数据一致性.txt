一：  什么是数据一致性:  对数据做了修改，读取到的数据需要和写入的一致


二:  一致性分为哪几个领域: 主从副本一致性【zookeeper, mysql master -> mysql slave， redis master -> slave 】，事务一致性【mysql single, mysql本地夸库事务, mysql 和 redis，mysql到mysql等】


三：  主从复制数据一致性的解决方案:  强一致性，弱一致性
   a) mysql强一致性可以开启数据全同步机制
   b) mysql弱一致性，异步复制和半同步复制
   c) redis 主从复制是弱一致性
   d) zookeeper是强一致性技术方案，有Paxos和ZAB协议保证，类似mysql全同步
   
   【
    异步复制（Asynchronous replication）
    MySQL默认的复制即是异步的，主库在执行完客户端提交的事务后会立即将结果返给给客户端，并不关心从库是否已经接收并处理，这样就会有一个问题，
    主如果crash掉了，此时主上已经提交的事务可能并没有传到从上，如果此时，强行将从提升为主，可能导致新主上的数据不完整。

    全同步复制（Fully synchronous replication）
    指当主库执行完一个事务，所有的从库都执行了该事务才返回给客户端。因为需要等待所有从库执行完该事务才能返回，所以全同步复制的性能必然会收到严重的影响。

    半同步复制（Semisynchronous replication）
    介于异步复制和全同步复制之间，主库在执行完客户端提交的事务后不是立刻返回给客户端，而是等待至少一个从库接收到并写到relay log中才返回给客户端。
    相对于异步复制，半同步复制提高了数据的安全性，同时它也造成了一定程度的延迟，这个延迟最少是一个TCP/IP往返的时间。所以，半同步复制最好在低延时的网络中使用。
    】

四： 事务一致性方案：ACID, CAP , BASE

 ACID: 适合单机mysql，本地夸库事务， 通过锁和mvcc达到强一致性
 
 
 
 CAP和BASE:  分布式事务理论基础，可以选择强一致性和弱一致性
 
 XA强一致性方案： 2pc,3pc,tcc，mysql内部也实现了xa

 事务弱一致性方案：binlog同步方案，触发器，常规业务写法【顺序业务逻辑+最终一致性方案】


 事务最终一致性方案：消息队列
 
 
 五: 一致性算法：也叫共识算法，防止单点故障如raft
 
 六：mysql 主从技术分为异步，半同步，全同步， 异步和半同步原理差不多，全同步给予binlog 和 MGR 协议实现
 
 
